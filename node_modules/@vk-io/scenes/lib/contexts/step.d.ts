import { IStepContextOptions } from './step.types';
import { StepSceneHandler } from '../scenes/step.types';
export default class StepSceneContext {
    private context;
    private steps;
    private stepChanged;
    constructor(options: IStepContextOptions);
    /**
     * The first enter to the handler
     */
    readonly firstTime: boolean;
    /**
     * Returns current stepId
     */
    /**
    * Sets current stepId
    */
    stepId: number;
    /**
     * Returns current handler
     */
    readonly current: StepSceneHandler<{}> | null;
    /**
     * Reenter current step handler
     *
     * @example
     * ctx.scene.step.reenter();
     */
    reenter(): Promise<void>;
    /**
     * Move to the next handler
     *
     * @example
     * ctx.scene.step.next();
     * ctx.scene.step.next({
     *   silent: true
     * });
     */
    next({ silent }?: {
        silent?: boolean;
    }): Promise<void>;
    /**
     * Move to the previous handler
     *
     * @example
     * ctx.scene.step.previous();
     * ctx.scene.step.previous({
     *   silent: true
     * });
     */
    previous({ silent }?: {
        silent?: boolean;
    }): Promise<void>;
}
